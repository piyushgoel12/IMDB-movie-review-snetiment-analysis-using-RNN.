# -*- coding: utf-8 -*-
"""IMDB_Sentiment_analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BvC890QeQrA-KT8pCq12qzluou-dMWCw
"""

#Here we are performing sentiment analysis on the dataset provided publibly by IMDB.

#Importing all the necessary libraries. 

import numpy as np
import tensorflow as tf
from tensorflow.keras.datasets import imdb
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, LSTM, Embedding

#Now that we have imported all the necessary libraries. Now we will set a specific length of the features present in the dataset.
max_features = 10000

#Now we will load the IMDB movie review sentiment analysis dataset. 
(X_train, y_train), (X_test, y_test) = imdb.load_data(num_words=max_features)

#Now we will define a fixd length to all the sequences. 
maxlen = 200
X_train = tf.keras.preprocessing.sequence.pad_sequences(X_train, maxlen=maxlen)
X_test = tf.keras.preprocessing.sequence.pad_sequences(X_test, maxlen=maxlen)

#Now we will define the RNN model for the sentiment analysis. 
#Here we will be using the "tanh" activation function.
model = Sequential()
model.add(Embedding(max_features, 128))
model.add(LSTM(64))
model.add(Dense(1, activation='tanh'))

#Compiling the RNN model. 
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])

#Training the RNN model.
#Total number of epochs we're taking here are 10, and the bacth size will be 30.
#Here we've added an embedding layer, a LSTM layer and a dense layer for better working of the model.
model.fit(X_train, y_train, epochs=10, batch_size=30, validation_data=(X_test, y_test))

#No we will evaluate the RNN model on the testing dataset and will provide the results.

#Now we will evaluate the model on the testing set of the dataset and will present the test results. 

score, acc = model.evaluate(X_test, y_test, batch_size=30)
print('Test score:', score)
print('Test accuracy:', acc)